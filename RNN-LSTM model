{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RNN-LSTM model","provenance":[{"file_id":"1XZSp0v6yG7LZR3Ju4rYv00kB5RSUPVBO","timestamp":1588606634377}],"machine_shape":"hm","authorship_tag":"ABX9TyMh1ANv96Owzgdx44v5+oGY"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"wJoeyMk7wNIB","colab_type":"code","outputId":"fc23d655-0698-4733-8fab-6a4671e4a53c","executionInfo":{"status":"ok","timestamp":1588755485215,"user_tz":-120,"elapsed":2269,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":74}},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","%cd /content/drive/My\\ Drive"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/My Drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LQnKpPKI69uH","colab_type":"code","outputId":"cb82b2e8-750d-464f-faf1-83488b0ed720","executionInfo":{"status":"ok","timestamp":1588755485220,"user_tz":-120,"elapsed":2209,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["cd Colab\\ Notebooks"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YuAAiRpo7lDH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":74},"outputId":"a62c2082-fea1-476d-f28c-14662003becf","executionInfo":{"status":"ok","timestamp":1588755486616,"user_tz":-120,"elapsed":3567,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}}},"source":["import pandas as pd\n","import numpy as np\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","from tensorflow.keras.callbacks import EarlyStopping\n","from tensorflow.keras.callbacks import ModelCheckpoint\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense, LSTM, Dropout\n","from tensorflow.keras import regularizers"],"execution_count":3,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"pzW7GZA_8GuV","colab_type":"text"},"source":["# Data loading"]},{"cell_type":"code","metadata":{"id":"s-7PL_7k8A8w","colab_type":"code","colab":{}},"source":["train=pd.read_csv('train.csv')\n","test=pd.read_csv('test.csv')\n","val=pd.read_csv('val.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xYifaLUr_Nx5","colab_type":"text"},"source":["# Data preprocessing"]},{"cell_type":"code","metadata":{"id":"91vfG5B78rfF","colab_type":"code","colab":{}},"source":["def dummies_transform(x):\n","  \"\"\"it will convert the categoricals variables in the data into numerical variables\"\"\"\n","  ftype = pd.get_dummies(x['File Type'], drop_first=True)\n","  dataset = pd.concat([x, ftype], axis = 1)\n","  dataset = dataset.drop('File Type', axis = 1)\n","  return dataset"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"k9k7XD8uPArC","colab_type":"code","colab":{}},"source":["# Conversion of categorical variables\n","train=dummies_transform(train)\n","test=dummies_transform(test)\n","val=dummies_transform(val)\n","\n","# data spliting into features and target\n","xtrain=train.drop('Status', axis = 1)\n","ytrain=train['Status']\n","\n","xtest=test.drop('Status', axis = 1)\n","ytest=test['Status']\n","\n","xval=val.drop('Status', axis = 1)\n","yval=val['Status']\n","\n","# features scaling\n","scaler=MinMaxScaler()\n","\n","Xtrain=scaler.fit_transform(xtrain)\n","#Xtrain=scaler.transform(Xtrain) \n","Xtest=scaler.transform(xtest)\n","Xval=scaler.transform(xval)\n","\n","# Reshape the datasets\n","X_train =Xtrain.reshape(-1,1,6)\n","X_test = Xtest.reshape(-1,1,6)\n","X_val =Xval.reshape(-1,1,6)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8jf9C8nmQUSy","colab_type":"text"},"source":["# Create and fit the lstm model"]},{"cell_type":"code","metadata":{"id":"KPkd4GP6QP5z","colab_type":"code","colab":{}},"source":["def baseline():\n","\n","  model = Sequential() # create the model\n","  model.add(LSTM(units =10, recurrent_regularizer=regularizers.l1_l2(l1=0, l2=0))) # one lstm layer\n","  model.add(Dense(1, activation='sigmoid')) # output layer\n","\n","  model.compile(loss = 'binary_crossentropy', metrics = ['accuracy'], optimizer = 'adam') # compile the model\n","\n","  return model"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"U6sKZc1WR8A5","colab_type":"code","colab":{}},"source":["model = baseline()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"dxTPXIRiR-fn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"d87a81e8-5472-49fb-bba8-3ec4c666bd5e","executionInfo":{"status":"ok","timestamp":1588755526982,"user_tz":-120,"elapsed":43766,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}}},"source":["MC = ModelCheckpoint('best_lstm1.h5', monitor = 'val_accuracy', verbose = 0, mode = 'max', save_best_only=True) # check and save the best model\n","ES = EarlyStopping(monitor = 'val_loss', mode = 'min', verbose = 1, patience = 3) # stop the training if the model did not improve\n","\n","# model fitting\n","history=model.fit(X_train,ytrain, validation_data=(X_val, yval), epochs = 4000, verbose = 1, callbacks=[ES,MC])"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Epoch 1/4000\n","77/77 [==============================] - 1s 11ms/step - loss: 0.6765 - accuracy: 0.6090 - val_loss: 0.6531 - val_accuracy: 0.6352\n","Epoch 2/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.6320 - accuracy: 0.6367 - val_loss: 0.6126 - val_accuracy: 0.6381\n","Epoch 3/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5928 - accuracy: 0.6449 - val_loss: 0.5756 - val_accuracy: 0.6524\n","Epoch 4/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5526 - accuracy: 0.6612 - val_loss: 0.5325 - val_accuracy: 0.6819\n","Epoch 5/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5027 - accuracy: 0.7065 - val_loss: 0.4771 - val_accuracy: 0.7600\n","Epoch 6/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4410 - accuracy: 0.8192 - val_loss: 0.4144 - val_accuracy: 0.8581\n","Epoch 7/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.3767 - accuracy: 0.8939 - val_loss: 0.3556 - val_accuracy: 0.8924\n","Epoch 8/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.3209 - accuracy: 0.9086 - val_loss: 0.3080 - val_accuracy: 0.8924\n","Epoch 9/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.2772 - accuracy: 0.9086 - val_loss: 0.2698 - val_accuracy: 0.8924\n","Epoch 10/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.2429 - accuracy: 0.9086 - val_loss: 0.2386 - val_accuracy: 0.8924\n","Epoch 11/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.2146 - accuracy: 0.9086 - val_loss: 0.2124 - val_accuracy: 0.8924\n","Epoch 12/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1908 - accuracy: 0.9086 - val_loss: 0.1897 - val_accuracy: 0.8924\n","Epoch 13/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1710 - accuracy: 0.9147 - val_loss: 0.1712 - val_accuracy: 0.9162\n","Epoch 14/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1547 - accuracy: 0.9278 - val_loss: 0.1554 - val_accuracy: 0.9162\n","Epoch 15/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1414 - accuracy: 0.9743 - val_loss: 0.1428 - val_accuracy: 0.9943\n","Epoch 16/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1304 - accuracy: 0.9947 - val_loss: 0.1322 - val_accuracy: 0.9943\n","Epoch 17/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1213 - accuracy: 0.9931 - val_loss: 0.1236 - val_accuracy: 0.9924\n","Epoch 18/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1137 - accuracy: 0.9918 - val_loss: 0.1164 - val_accuracy: 0.9895\n","Epoch 19/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1073 - accuracy: 0.9910 - val_loss: 0.1102 - val_accuracy: 0.9876\n","Epoch 20/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.1018 - accuracy: 0.9906 - val_loss: 0.1050 - val_accuracy: 0.9838\n","Epoch 21/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0970 - accuracy: 0.9898 - val_loss: 0.1001 - val_accuracy: 0.9848\n","Epoch 22/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0931 - accuracy: 0.9886 - val_loss: 0.0959 - val_accuracy: 0.9848\n","Epoch 23/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0891 - accuracy: 0.9890 - val_loss: 0.0921 - val_accuracy: 0.9848\n","Epoch 24/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0859 - accuracy: 0.9878 - val_loss: 0.0888 - val_accuracy: 0.9829\n","Epoch 25/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0827 - accuracy: 0.9882 - val_loss: 0.0857 - val_accuracy: 0.9848\n","Epoch 26/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0799 - accuracy: 0.9882 - val_loss: 0.0832 - val_accuracy: 0.9829\n","Epoch 27/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0776 - accuracy: 0.9873 - val_loss: 0.0804 - val_accuracy: 0.9838\n","Epoch 28/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0751 - accuracy: 0.9878 - val_loss: 0.0778 - val_accuracy: 0.9838\n","Epoch 29/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0731 - accuracy: 0.9886 - val_loss: 0.0760 - val_accuracy: 0.9819\n","Epoch 30/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0710 - accuracy: 0.9873 - val_loss: 0.0736 - val_accuracy: 0.9829\n","Epoch 31/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0690 - accuracy: 0.9878 - val_loss: 0.0716 - val_accuracy: 0.9848\n","Epoch 32/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0674 - accuracy: 0.9878 - val_loss: 0.0697 - val_accuracy: 0.9857\n","Epoch 33/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0657 - accuracy: 0.9869 - val_loss: 0.0680 - val_accuracy: 0.9848\n","Epoch 34/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0643 - accuracy: 0.9869 - val_loss: 0.0664 - val_accuracy: 0.9829\n","Epoch 35/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0626 - accuracy: 0.9869 - val_loss: 0.0647 - val_accuracy: 0.9848\n","Epoch 36/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0613 - accuracy: 0.9878 - val_loss: 0.0633 - val_accuracy: 0.9838\n","Epoch 37/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0598 - accuracy: 0.9869 - val_loss: 0.0619 - val_accuracy: 0.9857\n","Epoch 38/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0587 - accuracy: 0.9886 - val_loss: 0.0603 - val_accuracy: 0.9848\n","Epoch 39/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0575 - accuracy: 0.9861 - val_loss: 0.0595 - val_accuracy: 0.9829\n","Epoch 40/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0561 - accuracy: 0.9865 - val_loss: 0.0577 - val_accuracy: 0.9848\n","Epoch 41/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0550 - accuracy: 0.9878 - val_loss: 0.0567 - val_accuracy: 0.9848\n","Epoch 42/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0539 - accuracy: 0.9869 - val_loss: 0.0557 - val_accuracy: 0.9838\n","Epoch 43/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0531 - accuracy: 0.9869 - val_loss: 0.0545 - val_accuracy: 0.9848\n","Epoch 44/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0519 - accuracy: 0.9873 - val_loss: 0.0533 - val_accuracy: 0.9857\n","Epoch 45/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0510 - accuracy: 0.9890 - val_loss: 0.0532 - val_accuracy: 0.9829\n","Epoch 46/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0504 - accuracy: 0.9865 - val_loss: 0.0514 - val_accuracy: 0.9857\n","Epoch 47/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0491 - accuracy: 0.9882 - val_loss: 0.0504 - val_accuracy: 0.9857\n","Epoch 48/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0484 - accuracy: 0.9878 - val_loss: 0.0495 - val_accuracy: 0.9857\n","Epoch 49/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0477 - accuracy: 0.9873 - val_loss: 0.0492 - val_accuracy: 0.9838\n","Epoch 50/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0467 - accuracy: 0.9878 - val_loss: 0.0478 - val_accuracy: 0.9857\n","Epoch 51/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0460 - accuracy: 0.9886 - val_loss: 0.0474 - val_accuracy: 0.9857\n","Epoch 52/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0452 - accuracy: 0.9869 - val_loss: 0.0462 - val_accuracy: 0.9857\n","Epoch 53/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0445 - accuracy: 0.9882 - val_loss: 0.0456 - val_accuracy: 0.9857\n","Epoch 54/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0437 - accuracy: 0.9886 - val_loss: 0.0449 - val_accuracy: 0.9857\n","Epoch 55/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0433 - accuracy: 0.9878 - val_loss: 0.0441 - val_accuracy: 0.9857\n","Epoch 56/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0425 - accuracy: 0.9873 - val_loss: 0.0434 - val_accuracy: 0.9876\n","Epoch 57/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0418 - accuracy: 0.9878 - val_loss: 0.0428 - val_accuracy: 0.9857\n","Epoch 58/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0411 - accuracy: 0.9890 - val_loss: 0.0421 - val_accuracy: 0.9857\n","Epoch 59/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0407 - accuracy: 0.9886 - val_loss: 0.0415 - val_accuracy: 0.9876\n","Epoch 60/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0398 - accuracy: 0.9886 - val_loss: 0.0410 - val_accuracy: 0.9857\n","Epoch 61/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0393 - accuracy: 0.9890 - val_loss: 0.0405 - val_accuracy: 0.9857\n","Epoch 62/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0389 - accuracy: 0.9886 - val_loss: 0.0396 - val_accuracy: 0.9876\n","Epoch 63/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0383 - accuracy: 0.9894 - val_loss: 0.0390 - val_accuracy: 0.9876\n","Epoch 64/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0376 - accuracy: 0.9894 - val_loss: 0.0386 - val_accuracy: 0.9867\n","Epoch 65/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0372 - accuracy: 0.9890 - val_loss: 0.0384 - val_accuracy: 0.9857\n","Epoch 66/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0365 - accuracy: 0.9886 - val_loss: 0.0374 - val_accuracy: 0.9886\n","Epoch 67/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0359 - accuracy: 0.9898 - val_loss: 0.0371 - val_accuracy: 0.9867\n","Epoch 68/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0355 - accuracy: 0.9890 - val_loss: 0.0371 - val_accuracy: 0.9857\n","Epoch 69/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0350 - accuracy: 0.9890 - val_loss: 0.0362 - val_accuracy: 0.9867\n","Epoch 70/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0343 - accuracy: 0.9894 - val_loss: 0.0356 - val_accuracy: 0.9876\n","Epoch 71/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0339 - accuracy: 0.9902 - val_loss: 0.0352 - val_accuracy: 0.9876\n","Epoch 72/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0335 - accuracy: 0.9886 - val_loss: 0.0343 - val_accuracy: 0.9876\n","Epoch 73/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0328 - accuracy: 0.9894 - val_loss: 0.0341 - val_accuracy: 0.9886\n","Epoch 74/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0325 - accuracy: 0.9898 - val_loss: 0.0334 - val_accuracy: 0.9886\n","Epoch 75/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0322 - accuracy: 0.9894 - val_loss: 0.0330 - val_accuracy: 0.9886\n","Epoch 76/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0316 - accuracy: 0.9894 - val_loss: 0.0328 - val_accuracy: 0.9886\n","Epoch 77/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0311 - accuracy: 0.9894 - val_loss: 0.0321 - val_accuracy: 0.9886\n","Epoch 78/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0309 - accuracy: 0.9894 - val_loss: 0.0316 - val_accuracy: 0.9876\n","Epoch 79/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0303 - accuracy: 0.9898 - val_loss: 0.0313 - val_accuracy: 0.9876\n","Epoch 80/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0299 - accuracy: 0.9894 - val_loss: 0.0308 - val_accuracy: 0.9876\n","Epoch 81/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0295 - accuracy: 0.9894 - val_loss: 0.0306 - val_accuracy: 0.9886\n","Epoch 82/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0292 - accuracy: 0.9902 - val_loss: 0.0305 - val_accuracy: 0.9886\n","Epoch 83/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0288 - accuracy: 0.9890 - val_loss: 0.0299 - val_accuracy: 0.9886\n","Epoch 84/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0285 - accuracy: 0.9898 - val_loss: 0.0298 - val_accuracy: 0.9886\n","Epoch 85/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0281 - accuracy: 0.9902 - val_loss: 0.0290 - val_accuracy: 0.9876\n","Epoch 86/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0277 - accuracy: 0.9898 - val_loss: 0.0287 - val_accuracy: 0.9876\n","Epoch 87/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0274 - accuracy: 0.9902 - val_loss: 0.0285 - val_accuracy: 0.9876\n","Epoch 88/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0270 - accuracy: 0.9898 - val_loss: 0.0284 - val_accuracy: 0.9886\n","Epoch 89/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0267 - accuracy: 0.9898 - val_loss: 0.0277 - val_accuracy: 0.9876\n","Epoch 90/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0263 - accuracy: 0.9906 - val_loss: 0.0272 - val_accuracy: 0.9895\n","Epoch 91/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0260 - accuracy: 0.9910 - val_loss: 0.0272 - val_accuracy: 0.9876\n","Epoch 92/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0258 - accuracy: 0.9902 - val_loss: 0.0268 - val_accuracy: 0.9876\n","Epoch 93/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0255 - accuracy: 0.9902 - val_loss: 0.0264 - val_accuracy: 0.9886\n","Epoch 94/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0254 - accuracy: 0.9906 - val_loss: 0.0260 - val_accuracy: 0.9886\n","Epoch 95/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0250 - accuracy: 0.9906 - val_loss: 0.0258 - val_accuracy: 0.9886\n","Epoch 96/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0248 - accuracy: 0.9910 - val_loss: 0.0254 - val_accuracy: 0.9895\n","Epoch 97/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0245 - accuracy: 0.9906 - val_loss: 0.0252 - val_accuracy: 0.9895\n","Epoch 98/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0243 - accuracy: 0.9910 - val_loss: 0.0251 - val_accuracy: 0.9886\n","Epoch 99/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0238 - accuracy: 0.9910 - val_loss: 0.0246 - val_accuracy: 0.9895\n","Epoch 100/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0240 - accuracy: 0.9910 - val_loss: 0.0243 - val_accuracy: 0.9895\n","Epoch 101/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0233 - accuracy: 0.9914 - val_loss: 0.0247 - val_accuracy: 0.9886\n","Epoch 102/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0232 - accuracy: 0.9910 - val_loss: 0.0239 - val_accuracy: 0.9895\n","Epoch 103/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0230 - accuracy: 0.9914 - val_loss: 0.0240 - val_accuracy: 0.9886\n","Epoch 104/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0229 - accuracy: 0.9910 - val_loss: 0.0234 - val_accuracy: 0.9895\n","Epoch 105/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0225 - accuracy: 0.9914 - val_loss: 0.0233 - val_accuracy: 0.9895\n","Epoch 106/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0224 - accuracy: 0.9910 - val_loss: 0.0233 - val_accuracy: 0.9886\n","Epoch 107/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0220 - accuracy: 0.9914 - val_loss: 0.0228 - val_accuracy: 0.9895\n","Epoch 108/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0220 - accuracy: 0.9914 - val_loss: 0.0226 - val_accuracy: 0.9895\n","Epoch 109/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0219 - accuracy: 0.9914 - val_loss: 0.0223 - val_accuracy: 0.9905\n","Epoch 110/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0218 - accuracy: 0.9910 - val_loss: 0.0220 - val_accuracy: 0.9905\n","Epoch 111/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0215 - accuracy: 0.9918 - val_loss: 0.0224 - val_accuracy: 0.9886\n","Epoch 112/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0212 - accuracy: 0.9918 - val_loss: 0.0217 - val_accuracy: 0.9905\n","Epoch 113/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0210 - accuracy: 0.9918 - val_loss: 0.0218 - val_accuracy: 0.9895\n","Epoch 114/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0209 - accuracy: 0.9914 - val_loss: 0.0212 - val_accuracy: 0.9914\n","Epoch 115/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0209 - accuracy: 0.9914 - val_loss: 0.0211 - val_accuracy: 0.9905\n","Epoch 116/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0205 - accuracy: 0.9922 - val_loss: 0.0213 - val_accuracy: 0.9895\n","Epoch 117/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0204 - accuracy: 0.9918 - val_loss: 0.0209 - val_accuracy: 0.9905\n","Epoch 118/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0202 - accuracy: 0.9914 - val_loss: 0.0208 - val_accuracy: 0.9905\n","Epoch 119/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0201 - accuracy: 0.9918 - val_loss: 0.0205 - val_accuracy: 0.9905\n","Epoch 120/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0200 - accuracy: 0.9914 - val_loss: 0.0203 - val_accuracy: 0.9914\n","Epoch 121/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0198 - accuracy: 0.9927 - val_loss: 0.0204 - val_accuracy: 0.9905\n","Epoch 122/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0197 - accuracy: 0.9918 - val_loss: 0.0201 - val_accuracy: 0.9914\n","Epoch 123/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0198 - accuracy: 0.9918 - val_loss: 0.0198 - val_accuracy: 0.9924\n","Epoch 124/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0195 - accuracy: 0.9918 - val_loss: 0.0198 - val_accuracy: 0.9924\n","Epoch 125/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0192 - accuracy: 0.9927 - val_loss: 0.0196 - val_accuracy: 0.9924\n","Epoch 126/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0193 - accuracy: 0.9922 - val_loss: 0.0200 - val_accuracy: 0.9905\n","Epoch 127/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0191 - accuracy: 0.9922 - val_loss: 0.0198 - val_accuracy: 0.9905\n","Epoch 128/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0189 - accuracy: 0.9927 - val_loss: 0.0195 - val_accuracy: 0.9914\n","Epoch 129/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0189 - accuracy: 0.9922 - val_loss: 0.0191 - val_accuracy: 0.9924\n","Epoch 130/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0189 - accuracy: 0.9927 - val_loss: 0.0190 - val_accuracy: 0.9924\n","Epoch 131/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0184 - accuracy: 0.9935 - val_loss: 0.0192 - val_accuracy: 0.9914\n","Epoch 132/4000\n","77/77 [==============================] - 0s 5ms/step - loss: 0.0183 - accuracy: 0.9922 - val_loss: 0.0186 - val_accuracy: 0.9924\n","Epoch 133/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0184 - accuracy: 0.9935 - val_loss: 0.0193 - val_accuracy: 0.9905\n","Epoch 134/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0181 - accuracy: 0.9922 - val_loss: 0.0186 - val_accuracy: 0.9924\n","Epoch 135/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0180 - accuracy: 0.9931 - val_loss: 0.0185 - val_accuracy: 0.9924\n","Epoch 136/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0181 - accuracy: 0.9927 - val_loss: 0.0181 - val_accuracy: 0.9924\n","Epoch 137/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0180 - accuracy: 0.9931 - val_loss: 0.0188 - val_accuracy: 0.9914\n","Epoch 138/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0180 - accuracy: 0.9927 - val_loss: 0.0181 - val_accuracy: 0.9924\n","Epoch 139/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0177 - accuracy: 0.9922 - val_loss: 0.0185 - val_accuracy: 0.9924\n","Epoch 140/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0175 - accuracy: 0.9927 - val_loss: 0.0177 - val_accuracy: 0.9943\n","Epoch 141/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0174 - accuracy: 0.9939 - val_loss: 0.0178 - val_accuracy: 0.9924\n","Epoch 142/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0173 - accuracy: 0.9931 - val_loss: 0.0177 - val_accuracy: 0.9924\n","Epoch 143/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0174 - accuracy: 0.9935 - val_loss: 0.0176 - val_accuracy: 0.9924\n","Epoch 144/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0172 - accuracy: 0.9935 - val_loss: 0.0177 - val_accuracy: 0.9924\n","Epoch 145/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0170 - accuracy: 0.9935 - val_loss: 0.0174 - val_accuracy: 0.9924\n","Epoch 146/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0170 - accuracy: 0.9935 - val_loss: 0.0173 - val_accuracy: 0.9924\n","Epoch 147/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0171 - accuracy: 0.9943 - val_loss: 0.0175 - val_accuracy: 0.9924\n","Epoch 148/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0168 - accuracy: 0.9935 - val_loss: 0.0170 - val_accuracy: 0.9924\n","Epoch 149/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0168 - accuracy: 0.9927 - val_loss: 0.0169 - val_accuracy: 0.9924\n","Epoch 150/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0167 - accuracy: 0.9939 - val_loss: 0.0169 - val_accuracy: 0.9924\n","Epoch 151/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0166 - accuracy: 0.9935 - val_loss: 0.0169 - val_accuracy: 0.9924\n","Epoch 152/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0165 - accuracy: 0.9939 - val_loss: 0.0167 - val_accuracy: 0.9924\n","Epoch 153/4000\n","77/77 [==============================] - 0s 6ms/step - loss: 0.0163 - accuracy: 0.9935 - val_loss: 0.0165 - val_accuracy: 0.9952\n","Epoch 154/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0164 - accuracy: 0.9939 - val_loss: 0.0167 - val_accuracy: 0.9924\n","Epoch 155/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0162 - accuracy: 0.9935 - val_loss: 0.0167 - val_accuracy: 0.9924\n","Epoch 156/4000\n","77/77 [==============================] - 0s 3ms/step - loss: 0.0164 - accuracy: 0.9939 - val_loss: 0.0170 - val_accuracy: 0.9924\n","Epoch 00156: early stopping\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZRNAv-eyTUAy","colab_type":"code","outputId":"f7d123e4-be8a-42f9-89f8-ca714f04a2fb","executionInfo":{"status":"ok","timestamp":1588755526992,"user_tz":-120,"elapsed":43724,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["# Find the last training and testing loss as well as accuracy\n","train_acc=model.evaluate(X_train, ytrain, verbose=0)\n","test_acc=model.evaluate(X_test, ytest, verbose=0)\n","print('Train: {}, Test: {}'.format(train_acc, test_acc))"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Train: [0.015983037650585175, 0.9934694170951843], Test: [0.019231408834457397, 0.9933333396911621]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FrJYWqSMHPpn","colab_type":"code","colab":{}},"source":["def classification(x):\n","  results=[]\n","  for i in range(len(x)):\n","    if x[i][0]<0.5:\n","      results.append(0) \n","    else:\n","      results.append(1) \n","  return results"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gQI3orbr6c4o","colab_type":"code","outputId":"469da738-f380-4fa1-920b-b2e924565037","executionInfo":{"status":"ok","timestamp":1588755527492,"user_tz":-120,"elapsed":44184,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":257}},"source":["# Computing the confusion matrix and the classification report\n","\n","predictions = model.predict(X_test)\n","y_pred=classification(predictions)\n","print(confusion_matrix(ytest, y_pred))\n","\n","print('\\n')\n","\n","#Computing the classification report\n","classes = ['Cold', 'Hot']\n","print(classification_report(ytest, y_pred, target_names=classes))"],"execution_count":12,"outputs":[{"output_type":"stream","text":["[[537   6]\n"," [  4 953]]\n","\n","\n","              precision    recall  f1-score   support\n","\n","        Cold       0.99      0.99      0.99       543\n","         Hot       0.99      1.00      0.99       957\n","\n","    accuracy                           0.99      1500\n","   macro avg       0.99      0.99      0.99      1500\n","weighted avg       0.99      0.99      0.99      1500\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"f3DA8ZxsgrGA","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rVvx9IDKcQN2","colab_type":"text"},"source":["# **Error's plots**"]},{"cell_type":"code","metadata":{"id":"95Q8rDXlcUlM","colab_type":"code","colab":{}},"source":["def plot_hist_acc(h, xsize=6, ysize=10):\n","\n","    fig_size = plt.rcParams[\"figure.figsize\"]\n","    plt.rcParams[\"figure.figsize\"] = [xsize, ysize]\n","    fig, axes = plt.subplots(nrows=1, ncols=1, sharex=True)\n","    \n","    # summarize history for Accuracy\n","    plt.subplot(211)\n","    plt.plot(h['accuracy'], label = 'Training')\n","    plt.plot(h['val_accuracy'], label = \"Validation\")\n","    plt.title('Training Performance')\n","    plt.ylabel('Accuracy')\n","    plt.xlabel('Epochs')\n","    plt.legend(['Train', 'Validation'], loc='best')\n","    \n","    plt.draw()\n","    plt.show()\n","\n","    return"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ffPWxpAwcb_5","colab_type":"code","outputId":"4a56cfa6-e221-468e-e802-d754f45fd08c","executionInfo":{"status":"ok","timestamp":1588755528840,"user_tz":-120,"elapsed":45466,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":374}},"source":["plot_hist_acc(history.history, xsize=8, ysize=12)"],"execution_count":14,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x864 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"n0TjHMYdcgUQ","colab_type":"code","colab":{}},"source":["def plot_hist_loss(h, xsize=6, ysize=10):\n","\n","    fig_size = plt.rcParams[\"figure.figsize\"]\n","    plt.rcParams[\"figure.figsize\"] = [xsize, ysize]\n","    fig, axes = plt.subplots(nrows=1, ncols=1, sharex=True)\n","    \n","    # summarize history for Accuracy\n","    plt.subplot(211)\n","    plt.plot(h['loss'], label = 'Training')\n","    plt.plot(h['val_loss'], label = \"Validation\")\n","    plt.title('Training Performance')\n","    plt.ylabel('Loss')\n","    plt.xlabel('Epochs')\n","    plt.legend(['Train', 'Validation'], loc='best')\n","    \n","    plt.draw()\n","    plt.show()\n","\n","    return"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qHvRcG6Qchb0","colab_type":"code","outputId":"d5f8bfe9-acd7-4e89-8df2-b9faa6760a9a","executionInfo":{"status":"ok","timestamp":1588755528852,"user_tz":-120,"elapsed":45434,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}},"colab":{"base_uri":"https://localhost:8080/","height":374}},"source":["plot_hist_loss(history.history, xsize=8, ysize=12)"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x864 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"-CTaJ8bhbVh8","colab_type":"text"},"source":["# Save the scaler"]},{"cell_type":"code","metadata":{"id":"N1qDT3Xp5tTQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"64c6ecdb-309d-40eb-a08f-c29a963e43b6","executionInfo":{"status":"ok","timestamp":1588755528856,"user_tz":-120,"elapsed":45420,"user":{"displayName":"Aulan Lucrèce Zahoundo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgoJXhKgkJsgt4Xv3MW4fUzgFKYON1SPMWy9eze=s64","userId":"01519257459331300439"}}},"source":["import joblib\n","\n","# save the scaler\n","joblib.dump(scaler, 'lstm_scaler.pkl')"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['lstm_scaler.pkl']"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"aHU-Tyq1Bkvr","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}